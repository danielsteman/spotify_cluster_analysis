[{"/Users/danielsteman/Desktop/dev/spotify_cluster_analysis/webapp/scp-frontend/src/index.js":"1","/Users/danielsteman/Desktop/dev/spotify_cluster_analysis/webapp/scp-frontend/src/reportWebVitals.js":"2","/Users/danielsteman/Desktop/dev/spotify_cluster_analysis/webapp/scp-frontend/src/App.js":"3","/Users/danielsteman/Desktop/dev/spotify_cluster_analysis/webapp/scp-frontend/src/components/LoginScreen.js":"4","/Users/danielsteman/Desktop/dev/spotify_cluster_analysis/webapp/scp-frontend/src/components/PlaylistGrid.js":"5"},{"size":219,"mtime":1610879782017,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":1609679247955,"results":"8","hashOfConfig":"7"},{"size":1811,"mtime":1610957679951,"results":"9","hashOfConfig":"7"},{"size":624,"mtime":1610961352073,"results":"10","hashOfConfig":"7"},{"size":803,"mtime":1610964437946,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"9j607c",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"14"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/danielsteman/Desktop/dev/spotify_cluster_analysis/webapp/scp-frontend/src/index.js",[],["25","26"],"/Users/danielsteman/Desktop/dev/spotify_cluster_analysis/webapp/scp-frontend/src/reportWebVitals.js",[],["27","28"],"/Users/danielsteman/Desktop/dev/spotify_cluster_analysis/webapp/scp-frontend/src/App.js",["29"],"import './App.css'\nimport queryString from 'query-string'\nimport React, { useState, useEffect } from 'react'\nimport LoginScreen from './components/LoginScreen'\nimport PlaylistGrid from './components/PlaylistGrid'\n\nconst App = () => {\n\n  const [userData, setUserData] = useState({})\n  const [accesstoken, setAccesstoken] = useState('')\n  const [playlists, setPlaylists] = useState({})\n  const [songs, setSongs] = useState({})\n\n  useEffect(() => {\n\n    let parsed = queryString.parse(window.location.search)\n    let accesstoken = parsed.access_token\n    if (!accesstoken) {\n      return\n    }\n    setAccesstoken(accesstoken)\n\n    fetch('https://api.spotify.com/v1/me', {\n      headers: {'Authorization': 'Bearer ' + accesstoken}\n    }).then(response => response.json())\n    .then(data => setUserData(data))\n\n    fetch(`https://api.spotify.com/v1/me/playlists`, {\n      headers: {'Authorization': 'Bearer ' + accesstoken}\n    }).then(response => response.json())\n    .then(playlistData => {\n\n      // Log some data of playlists\n      console.log('playlist data:')\n      console.log(playlistData)\n\n      setPlaylists(playlistData)\n      playlistData.items.map(playlist => {\n        return fetch(playlist.href, {\n          headers: {'Authorization': 'Bearer ' + accesstoken}\n        }).then(response => response.json())\n        .then(data => {\n\n          // Log data of songs within each playlist\n          console.log('playlist song data:')\n          console.log(data)\n\n          setSongs(data)\n        })\n      })\n    })\n\n  }, [])\n\n  return(\n    <div>\n      {accesstoken ? (\n        <div>\n          {playlists && playlists.items && (\n            <PlaylistGrid playlistData={playlists} user={userData}/>\n          )}\n        </div>\n      ) : (\n        <LoginScreen/>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","/Users/danielsteman/Desktop/dev/spotify_cluster_analysis/webapp/scp-frontend/src/components/LoginScreen.js",[],"/Users/danielsteman/Desktop/dev/spotify_cluster_analysis/webapp/scp-frontend/src/components/PlaylistGrid.js",[],{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},{"ruleId":"30","replacedBy":"34"},{"ruleId":"32","replacedBy":"35"},{"ruleId":"36","severity":1,"message":"37","line":12,"column":10,"nodeType":"38","messageId":"39","endLine":12,"endColumn":15},"no-native-reassign",["40"],"no-negated-in-lhs",["41"],["40"],["41"],"no-unused-vars","'songs' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]